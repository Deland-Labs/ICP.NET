using System;
using Xunit;
using EdjCase.ICP.Agent.Responses;
using System.Collections.Generic;
using System.Formats.Cbor;

public class QueryResponseTests
{
	[Fact]
	public void ReadCbor_ReturnsQueryResponse_WhenStatusIsReplied()
	{
		// query_blocks : (GetBlocksArgs) -> (QueryBlocksResponse) query;
		// get icp ledger by query_blocks with
		//	  const int start = 15181994;
		//    var getBlockReq = new GetBlocksArgs(start, 1);
		//    var res = await client.QueryBlocks(getBlockReq);

		var bytes = new List<byte>
		{
			217, 217, 247, 191, 102, 115, 116, 97, 116, 117, 115, 103, 114, 101, 112, 108, 105, 101, 100, 101, 114, 101,
			112, 108, 121, 161, 99, 97, 114, 103, 89, 3, 148, 68, 73, 68, 76, 25, 108, 5, 151, 146, 139, 218, 1, 1, 134,
			221, 168, 191, 10, 3, 164, 199, 168, 206, 12, 120, 145, 251, 149, 146, 13, 120, 131, 244, 244, 196, 15, 16,
			110, 2, 109, 123, 109, 4, 108, 3, 222, 195, 137, 220, 4, 5, 214, 169, 187, 174, 10, 12, 195, 156, 153, 173,
			15, 1, 108, 4, 186, 137, 229, 194, 4, 120, 147, 166, 198, 144, 9, 1, 167, 136, 130, 130, 10, 6, 130, 243,
			243, 145, 12, 12, 110, 7, 107, 4, 173, 250, 237, 251, 1, 8, 239, 128, 229, 223, 2, 13, 194, 245, 213, 153,
			3, 14, 203, 214, 253, 160, 11, 15, 108, 7, 198, 252, 182, 2, 9, 234, 202, 138, 158, 4, 2, 185, 135, 146,
			234, 7, 124, 216, 187, 178, 132, 12, 9, 145, 156, 156, 191, 13, 10, 222, 167, 247, 218, 13, 11, 203, 150,
			220, 180, 14, 2, 108, 1, 224, 169, 179, 2, 120, 110, 9, 110, 12, 108, 1, 214, 246, 142, 128, 1, 120, 108, 3,
			234, 202, 138, 158, 4, 2, 216, 163, 140, 168, 13, 9, 203, 150, 220, 180, 14, 1, 108, 2, 251, 202, 1, 2, 216,
			163, 140, 168, 13, 9, 108, 5, 251, 202, 1, 2, 198, 252, 182, 2, 9, 234, 202, 138, 158, 4, 2, 216, 163, 140,
			168, 13, 9, 203, 150, 220, 180, 14, 1, 109, 17, 108, 3, 197, 179, 154, 248, 7, 18, 226, 232, 173, 160, 8,
			120, 230, 169, 158, 248, 9, 120, 106, 1, 19, 1, 20, 1, 1, 108, 2, 226, 232, 173, 160, 8, 120, 230, 169, 158,
			248, 9, 120, 107, 2, 188, 138, 1, 21, 197, 254, 210, 1, 22, 108, 1, 134, 221, 168, 191, 10, 3, 107, 2, 176,
			173, 140, 212, 4, 23, 176, 173, 143, 205, 12, 24, 108, 2, 193, 164, 130, 166, 5, 120, 128, 213, 219, 221, 5,
			120, 108, 2, 144, 198, 193, 150, 5, 113, 196, 152, 177, 181, 13, 120, 1, 0, 1, 253, 3, 217, 217, 247, 162,
			100, 116, 114, 101, 101, 131, 1, 131, 1, 131, 1, 130, 4, 88, 32, 166, 90, 250, 56, 226, 36, 34, 136, 99,
			168, 158, 187, 115, 207, 229, 92, 249, 192, 181, 230, 200, 248, 117, 108, 57, 136, 205, 120, 57, 118, 94,
			139, 131, 2, 72, 99, 97, 110, 105, 115, 116, 101, 114, 131, 1, 131, 1, 131, 1, 130, 4, 88, 32, 144, 56, 233,
			156, 97, 47, 123, 24, 179, 246, 65, 53, 52, 199, 48, 94, 164, 135, 223, 240, 241, 133, 132, 171, 113, 124,
			188, 76, 46, 92, 19, 53, 131, 1, 131, 2, 74, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 131, 1, 131, 1, 131, 2, 78, 99,
			101, 114, 116, 105, 102, 105, 101, 100, 95, 100, 97, 116, 97, 130, 3, 88, 32, 145, 217, 123, 66, 27, 93,
			156, 250, 97, 120, 69, 5, 70, 159, 47, 210, 19, 110, 130, 199, 120, 6, 175, 169, 188, 143, 2, 83, 151, 253,
			213, 35, 130, 4, 88, 32, 216, 246, 79, 122, 252, 166, 165, 93, 78, 230, 222, 217, 176, 32, 11, 172, 102, 81,
			202, 244, 199, 161, 146, 2, 18, 181, 160, 60, 155, 241, 223, 54, 130, 4, 88, 32, 4, 101, 1, 112, 217, 117,
			249, 236, 67, 88, 222, 202, 196, 1, 177, 63, 14, 59, 28, 2, 87, 222, 40, 200, 242, 136, 68, 102, 92, 114,
			161, 193, 130, 4, 88, 32, 164, 56, 239, 93, 55, 255, 211, 64, 51, 236, 121, 236, 198, 205, 177, 37, 133,
			255, 56, 20, 76, 44, 228, 186, 21, 56, 71, 125, 40, 134, 67, 157, 130, 4, 88, 32, 241, 121, 179, 49, 212,
			12, 164, 7, 0, 34, 157, 166, 55, 69, 69, 217, 233, 174, 74, 57, 131, 120, 193, 235, 164, 25, 136, 4, 171,
			95, 181, 140, 130, 4, 88, 32, 101, 204, 143, 63, 31, 231, 106, 85, 221, 226, 38, 134, 75, 14, 198, 126, 167,
			25, 57, 229, 245, 66, 210, 180, 3, 251, 127, 144, 127, 131, 87, 69, 130, 4, 88, 32, 242, 128, 181, 29, 101,
			231, 35, 25, 113, 1, 18, 137, 102, 59, 215, 159, 76, 237, 216, 154, 91, 254, 31, 84, 103, 234, 46, 217, 152,
			137, 181, 193, 131, 1, 130, 4, 88, 32, 7, 186, 155, 171, 1, 22, 4, 62, 45, 162, 10, 171, 49, 126, 92, 77,
			40, 74, 190, 215, 16, 50, 131, 164, 119, 213, 40, 60, 202, 124, 125, 64, 131, 2, 68, 116, 105, 109, 101,
			130, 3, 73, 235, 148, 219, 154, 128, 244, 159, 128, 24, 105, 115, 105, 103, 110, 97, 116, 117, 114, 101, 88,
			48, 136, 153, 100, 69, 83, 24, 243, 6, 198, 105, 141, 16, 191, 230, 52, 211, 164, 231, 18, 206, 235, 82, 24,
			53, 105, 233, 179, 18, 194, 67, 14, 99, 193, 63, 35, 234, 55, 244, 233, 133, 133, 153, 255, 86, 224, 168,
			228, 72, 0, 170, 168, 231, 0, 0, 0, 0, 0, 224, 160, 231, 0, 0, 0, 0, 0, 1, 1, 1, 10, 0, 0, 0, 0, 0, 0, 0,
			14, 1, 1, 10, 103, 101, 116, 95, 98, 108, 111, 99, 107, 115, 155, 114, 231, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
			0, 0, 106, 115, 105, 103, 110, 97, 116, 117, 114, 101, 115, 129, 163, 105, 116, 105, 109, 101, 115, 116, 97,
			109, 112, 27, 24, 0, 127, 160, 3, 86, 202, 107, 105, 115, 105, 103, 110, 97, 116, 117, 114, 101, 88, 64,
			169, 159, 126, 92, 111, 75, 212, 109, 183, 95, 190, 25, 180, 202, 133, 72, 5, 38, 73, 253, 25, 108, 131,
			226, 197, 53, 71, 2, 1, 251, 139, 120, 201, 81, 170, 28, 195, 115, 126, 31, 67, 195, 46, 156, 232, 58, 118,
			197, 42, 5, 101, 211, 115, 238, 181, 58, 173, 151, 100, 158, 243, 173, 147, 15, 104, 105, 100, 101, 110,
			116, 105, 116, 121, 88, 29, 92, 111, 170, 172, 37, 166, 176, 22, 253, 212, 110, 244, 10, 200, 125, 247, 61,
			57, 154, 192, 84, 118, 106, 31, 195, 59, 52, 107, 2, 255
		};


		var reader = new CborReader(bytes.ToArray(), CborConformanceMode.Strict, false);

		// // Ensure no exception is thrown
		var response = QueryResponse.ReadCbor(reader);

		Assert.Equal(QueryResponseType.Replied, response.Type);
	}
}
